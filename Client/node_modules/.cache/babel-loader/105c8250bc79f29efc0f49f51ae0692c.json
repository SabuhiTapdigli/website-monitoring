{"ast":null,"code":"import * as types from '../Actions/actionTypes';\nconst initialState = {\n  data: [],\n  searched: []\n};\n\nconst websiteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GETITEMS:\n      return {\n        data: action.payload\n      };\n\n    case types.EDITITEM:\n      return { ...state,\n        website: action.payload\n      };\n\n    case types.SEARCHITEMS:\n      if (action.payload !== '') {\n        return {\n          searched: state.data.filter(e => {\n            return Object.values(e).join(\" \").toLowerCase().includes(action.payload.toLowerCase());\n          })\n        };\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default websiteReducer;","map":{"version":3,"sources":["/Users/admin/Desktop/React/website-monitoring/src/Reducers/websitesReducer.js"],"names":["types","initialState","data","searched","websiteReducer","state","action","type","GETITEMS","payload","EDITITEM","website","SEARCHITEMS","filter","e","Object","values","join","toLowerCase","includes"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,QAAQ,EAAC;AAFQ,CAArB;;AAIA,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAxBJ,YAAwB;AAAA,MAAXK,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAK,CAACQ,QAAX;AACI,aAAO;AAACN,QAAAA,IAAI,EAACI,MAAM,CAACG;AAAb,OAAP;;AACJ,SAAKT,KAAK,CAACU,QAAX;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAUM,QAAAA,OAAO,EAACL,MAAM,CAACG;AAAzB,OAAP;;AACJ,SAAKT,KAAK,CAACY,WAAX;AACI,UAAGN,MAAM,CAACG,OAAP,KAAmB,EAAtB,EAAyB;AACrB,eAAO;AACHN,UAAAA,QAAQ,EAACE,KAAK,CAACH,IAAN,CAAWW,MAAX,CAAmBC,CAAD,IAAK;AAC5B,mBAAOC,MAAM,CAACC,MAAP,CAAcF,CAAd,EAAiBG,IAAjB,CAAsB,GAAtB,EAA2BC,WAA3B,GAAyCC,QAAzC,CAAkDb,MAAM,CAACG,OAAP,CAAeS,WAAf,EAAlD,CAAP;AACH,WAFQ;AADN,SAAP;AAKH,OAND,MAMK;AACD,eAAOb,KAAP;AACH;;AAEL;AACI,aAAOA,KAAP;AAjBR;AAmBH,CApBD;;AAqBA,eAAeD,cAAf","sourcesContent":["import * as types from '../Actions/actionTypes';\n\nconst initialState = {\n    data:[],\n    searched:[]\n}\nconst websiteReducer = (state=initialState,action) => {\n    switch (action.type){\n        case types.GETITEMS:\n            return({data:action.payload})\n        case types.EDITITEM:\n            return({...state,website:action.payload})\n        case types.SEARCHITEMS:\n            if(action.payload !== ''){\n                return({\n                    searched:state.data.filter((e)=>{\n                        return Object.values(e).join(\" \").toLowerCase().includes(action.payload.toLowerCase())\n                    })\n                })\n            }else{\n                return state\n            }\n            \n        default:\n            return state\n    }\n}\nexport default websiteReducer"]},"metadata":{},"sourceType":"module"}