{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/React/website-monitoring/src/components/LastEdit/LastEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getlogInitiate } from '../../Actions/logging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lastedit = () => {\n  _s();\n\n  const {\n    logdata,\n    editlog\n  } = useSelector(state => state.log);\n  const [current, setcurrent] = useState();\n  const [toggle, settoggle] = useState();\n\n  const Loghandler = id => {\n    setcurrent(id);\n\n    if (id === current) {\n      settoggle(!toggle);\n    }\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getlogInitiate());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Edit, {\n      children: logdata.map(item => settoggle({ ...toggle,\n        item: false\n      }) // item.actiontype === 'edited' ?\n      // <div key={item.id}>\n      // <li>{item.code} {item.actiontype} {item.owener}  by {item.user} time: {item.time.toDate().toLocaleString()}</li>\n      // <span onClick={()=>Loghandler(item.id)} className={toggle ? 'show' : 'hide' }>||</span>\n      // <div>\n      //    {item.editlogdata.oldcode !== item.editlogdata.newcode && <div>{item.editlogdata.oldcode} changed to {item.editlogdata.newcode}</div>}\n      //    {item.editlogdata.olddomain !== item.editlogdata.newdomain && <div>{item.editlogdata.olddomain} changed to {item.editlogdata.newdomain}</div>}\n      //    {item.editlogdata.oldcpanel !== item.editlogdata.newcpanel && <div>{item.editlogdata.oldcpanel} changed to {item.editlogdata.newcpanel}</div>}\n      //    {item.editlogdata.oldusername !== item.editlogdata.newusername && <div>{item.editlogdata.oldusername} changed to {item.editlogdata.newusername}</div>}\n      //    {item.editlogdata.oldpassword !== item.editlogdata.newpassword && <div>{item.editlogdata.oldpassword} changed to {item.editlogdata.newpassword}</div>}\n      //    {item.editlogdata.olddomainExpireDate !== item.editlogdata.newdomainExpireDate && <div>{item.editlogdata.olddomainExpireDate} changed to {item.editlogdata.newdomainExpireDate}</div>}\n      //    {item.editlogdata.oldhostingExpireDate !== item.editlogdata.newhostingExpireDate && <div>{item.editlogdata.oldhostingExpireDate} changed to {item.editlogdata.newhostingExpireDate}</div>}\n      //    {item.editlogdata.oldsslExpireDate !== item.editlogdata.newsslExpireDate && <div>{item.editlogdata.oldsslExpireDate} changed to {item.editlogdata.newsslExpireDate}</div>}\n      // </div>\n      // </div>\n      // :\n      // <li>{item.code} {item.actiontype} {item.owener}  by {item.user} time: {item.time.toDate().toLocaleString()}</li>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Lastedit, \"v37Y3aabi/S/rzPuQbdjPhGkWco=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Lastedit;\nconst Container = styled.div`\n    background-color:purple;\n    height:25vh;\n    text-align:center;\n    color:white;\n    overflow: scroll;\n`;\n_c2 = Container;\nconst Edit = styled.ul`\n    li{\n        padding-top:10px;\n    }\n\n`;\n_c3 = Edit;\nexport default Lastedit;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Lastedit\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Edit\");","map":{"version":3,"sources":["/Users/admin/Desktop/React/website-monitoring/src/components/LastEdit/LastEdit.js"],"names":["useEffect","useState","styled","useDispatch","useSelector","getlogInitiate","Lastedit","logdata","editlog","state","log","current","setcurrent","toggle","settoggle","Loghandler","id","dispatch","map","item","Container","div","Edit","ul"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AACA,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAClB,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAoBJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACC,GAAd,CAArC;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAsBX,QAAQ,EAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;;AACA,QAAMc,UAAU,GAAIC,EAAD,IAAO;AACtBJ,IAAAA,UAAU,CAACI,EAAD,CAAV;;AACA,QAAGA,EAAE,KAAKL,OAAV,EAAkB;AACdG,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH;AAEJ,GAND;;AAOA,QAAMI,QAAQ,GAAGd,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAI;AACViB,IAAAA,QAAQ,CAACZ,cAAc,EAAf,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,IAAD;AAAA,gBACKE,OAAO,CAACW,GAAR,CAAaC,IAAD,IACTL,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAWM,QAAAA,IAAI,EAAC;AAAhB,OAAD,CADA,CAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA1CD;;GAAMb,Q;UACwBF,W,EAUTD,W;;;KAXfG,Q;AA2CN,MAAMc,SAAS,GAAGlB,MAAM,CAACmB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,S;AAON,MAAME,IAAI,GAAGpB,MAAM,CAACqB,EAAG;AACvB;AACA;AACA;AACA;AACA,CALA;MAAMD,I;AAMN,eAAehB,QAAf","sourcesContent":["import {useEffect,useState} from 'react'\nimport styled from 'styled-components'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { getlogInitiate } from '../../Actions/logging'\nconst Lastedit = () =>{\n    const {logdata,editlog} = useSelector(state=>state.log)\n    const [current,setcurrent]= useState()\n    const [toggle, settoggle] = useState()\n    const Loghandler = (id) =>{\n        setcurrent(id)\n        if(id === current){\n            settoggle(!toggle)\n        }\n        \n    }\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        dispatch(getlogInitiate())\n    },[])\n    return(\n        <Container>\n            <Edit>\n                {logdata.map((item)=>(\n                    settoggle({...toggle,item:false})\n                    // item.actiontype === 'edited' ?\n                    // <div key={item.id}>\n                    // <li>{item.code} {item.actiontype} {item.owener}  by {item.user} time: {item.time.toDate().toLocaleString()}</li>\n                    // <span onClick={()=>Loghandler(item.id)} className={toggle ? 'show' : 'hide' }>||</span>\n                    // <div>\n                    //    {item.editlogdata.oldcode !== item.editlogdata.newcode && <div>{item.editlogdata.oldcode} changed to {item.editlogdata.newcode}</div>}\n                    //    {item.editlogdata.olddomain !== item.editlogdata.newdomain && <div>{item.editlogdata.olddomain} changed to {item.editlogdata.newdomain}</div>}\n                    //    {item.editlogdata.oldcpanel !== item.editlogdata.newcpanel && <div>{item.editlogdata.oldcpanel} changed to {item.editlogdata.newcpanel}</div>}\n                    //    {item.editlogdata.oldusername !== item.editlogdata.newusername && <div>{item.editlogdata.oldusername} changed to {item.editlogdata.newusername}</div>}\n                    //    {item.editlogdata.oldpassword !== item.editlogdata.newpassword && <div>{item.editlogdata.oldpassword} changed to {item.editlogdata.newpassword}</div>}\n                    //    {item.editlogdata.olddomainExpireDate !== item.editlogdata.newdomainExpireDate && <div>{item.editlogdata.olddomainExpireDate} changed to {item.editlogdata.newdomainExpireDate}</div>}\n                    //    {item.editlogdata.oldhostingExpireDate !== item.editlogdata.newhostingExpireDate && <div>{item.editlogdata.oldhostingExpireDate} changed to {item.editlogdata.newhostingExpireDate}</div>}\n                    //    {item.editlogdata.oldsslExpireDate !== item.editlogdata.newsslExpireDate && <div>{item.editlogdata.oldsslExpireDate} changed to {item.editlogdata.newsslExpireDate}</div>}\n                    // </div>\n                    // </div>\n                    // :\n                    // <li>{item.code} {item.actiontype} {item.owener}  by {item.user} time: {item.time.toDate().toLocaleString()}</li>\n                )\n                )}\n            </Edit>\n        </Container>\n    )\n}\nconst Container = styled.div`\n    background-color:purple;\n    height:25vh;\n    text-align:center;\n    color:white;\n    overflow: scroll;\n`\nconst Edit = styled.ul`\n    li{\n        padding-top:10px;\n    }\n\n`\nexport default Lastedit"]},"metadata":{},"sourceType":"module"}