{"ast":null,"code":"import * as types from '../Actions/actionTypes';\nconst initialState = {\n  data: [],\n  value: '',\n  works: []\n};\n\nconst websiteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GETITEMS:\n      return {\n        data: action.payload\n      };\n\n    case types.EDITITEM:\n      return { ...state,\n        website: action.payload\n      };\n\n    case types.SEARCHITEMS:\n      const {\n        value\n      } = action;\n      const works = state.data.filter(val => val.includes(value));\n      return { ...state,\n        value,\n        works\n      };\n    // return(console.log(state.data.filter((val)=> val.include({action}))))\n\n    default:\n      return state;\n  }\n};\n\nexport default websiteReducer;","map":{"version":3,"sources":["/Users/admin/Desktop/React/website-monitoring/src/Reducers/websitesReducer.js"],"names":["types","initialState","data","value","works","websiteReducer","state","action","type","GETITEMS","payload","EDITITEM","website","SEARCHITEMS","filter","val","includes"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AACRC,EAAAA,KAAK,EAAE,EADC;AACGC,EAAAA,KAAK,EAAE;AADV,CAArB;;AAGA,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAxBL,YAAwB;AAAA,MAAXM,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,KAAK,CAACS,QAAX;AACI,aAAO;AAACP,QAAAA,IAAI,EAACK,MAAM,CAACG;AAAb,OAAP;;AACJ,SAAKV,KAAK,CAACW,QAAX;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAUM,QAAAA,OAAO,EAACL,MAAM,CAACG;AAAzB,OAAP;;AACJ,SAAKV,KAAK,CAACa,WAAX;AACI,YAAM;AAACV,QAAAA;AAAD,UAAUI,MAAhB;AACA,YAAMH,KAAK,GAAGE,KAAK,CAACJ,IAAN,CAAWY,MAAX,CAAmBC,GAAD,IAASA,GAAG,CAACC,QAAJ,CAAab,KAAb,CAA3B,CAAd;AACA,aAAO,EAAC,GAAGG,KAAJ;AAAWH,QAAAA,KAAX;AAAkBC,QAAAA;AAAlB,OAAP;AACA;;AACJ;AACI,aAAOE,KAAP;AAXR;AAaH,CAdD;;AAeA,eAAeD,cAAf","sourcesContent":["import * as types from '../Actions/actionTypes';\n\nconst initialState = {\n    data:[], value: '', works: []\n}\nconst websiteReducer = (state=initialState,action) => {\n    switch (action.type){\n        case types.GETITEMS:\n            return({data:action.payload})\n        case types.EDITITEM:\n            return({...state,website:action.payload})\n        case types.SEARCHITEMS:\n            const {value} = action;\n            const works = state.data.filter((val) => val.includes(value));\n            return {...state, value, works};\n            // return(console.log(state.data.filter((val)=> val.include({action}))))\n        default:\n            return state\n    }\n}\nexport default websiteReducer"]},"metadata":{},"sourceType":"module"}