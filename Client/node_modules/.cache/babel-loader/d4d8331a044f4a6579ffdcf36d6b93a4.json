{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/React/website-monitoring/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport './index.css';\nimport Main from './components/Main/Main';\nimport { BrowserRouter, Routes, Route, useNavigate } from \"react-router-dom\";\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport UserRoute from './components/Auth/UserRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { auth } from './firebaseConfig/fbConfig';\nimport { setuser, userRole } from './Actions/authaction';\nimport Userlist from './components/Userlists/Userlist';\nimport db from './firebaseConfig/fbConfig';\nimport axios from 'axios';\nimport Scrapped from './Pages/Scrapped';\nimport Verifyemail from './components/Auth/Verifyemail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  useEffect(() => {\n    auth.onAuthStateChanged(currentUser => {\n      if (currentUser) {\n        dispatch(setuser(currentUser));\n        db.collection('user').doc(currentUser.uid).get().then(user => {\n          dispatch(userRole({ ...user.data()\n          }));\n        });\n      } else {\n        dispatch(setuser(null));\n      }\n    });\n  }, [dispatch]);\n  const {\n    currentuser\n  } = useSelector(state => state.user);\n  let routes;\n  useEffect(() => {\n    if (currentuser && currentuser.emailVerified) {\n      routes = /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"userlist\",\n          element: /*#__PURE__*/_jsxDEV(Userlist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"scrapped\",\n          element: /*#__PURE__*/_jsxDEV(Scrapped, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n      history('/');\n    } else if (currentuser && !currentuser.emailVerified) {\n      routes = /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"verifyemail\",\n          element: /*#__PURE__*/_jsxDEV(Verifyemail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n      history('verifyemail');\n    } else {\n      routes = /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n      history('login');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: routes\n  }, void 0, false);\n}\n\n_s(App, \"UGPNVMa585AMVCeXe2YdIV6obTg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Desktop/React/website-monitoring/src/App.js"],"names":["useEffect","styled","Main","BrowserRouter","Routes","Route","useNavigate","Login","Register","UserRoute","useDispatch","useSelector","auth","setuser","userRole","Userlist","db","axios","Scrapped","Verifyemail","App","dispatch","history","onAuthStateChanged","currentUser","collection","doc","uid","get","then","user","data","currentuser","state","routes","emailVerified"],"mappings":"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","sourcesContent":["import {useEffect} from 'react'\nimport styled from 'styled-components';\nimport './index.css'\nimport Main from './components/Main/Main';\nimport { BrowserRouter,Routes,Route,useNavigate } from \"react-router-dom\";\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport UserRoute from './components/Auth/UserRoute';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { auth } from './firebaseConfig/fbConfig'\nimport {setuser, userRole} from './Actions/authaction'\nimport Userlist from './components/Userlists/Userlist';\nimport db from './firebaseConfig/fbConfig';\nimport axios from 'axios'\nimport Scrapped from './Pages/Scrapped';\nimport Verifyemail from './components/Auth/Verifyemail';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const history  = useNavigate()\n  useEffect(()=>{\n    auth.onAuthStateChanged((currentUser)=>{\n      if(currentUser){\n        dispatch(setuser(currentUser))\n        db.collection('user').doc(currentUser.uid).get().then((user)=>{\n          dispatch(userRole({...user.data()}))\n      })\n      }else{\n        dispatch(setuser(null))\n      }\n    })\n  },[dispatch])\n  const {currentuser} = useSelector(state =>state.user)\n  let routes;\n  useEffect(()=>{\n    if(currentuser && currentuser.emailVerified){\n      routes = (\n        <Routes>\n          <Route exact path='/' element ={<Main/>}/>\n          <Route path='userlist' element ={<Userlist/>}></Route>\n          <Route path='scrapped' element ={<Scrapped/>}></Route>\n        </Routes>\n      )\n      history('/')\n    }\n    else if(currentuser && !currentuser.emailVerified){\n      routes = (\n        <Routes>\n          <Route exact path='verifyemail' element ={<Verifyemail/>}></Route>\n          {/* <Navigate to='verifyemail'/> */}\n        </Routes>\n      )\n      history('verifyemail')\n    }else{\n      routes = (\n        <Routes>\n          <Route path='login' element={<Login />}/>\n          <Route path='register' element={<Register/>}/>\n        </Routes>\n      )\n      history('login')\n    }\n  },[])\n  \n  return (\n    <>\n     \n      {routes}\n    \n    </>\n  );\n}\n\n\n\nexport default App ;"]},"metadata":{},"sourceType":"module"}