{"ast":null,"code":"import * as types from './actionTypes';\nimport db from '../firebaseConfig/fbConfig';\n\nconst additem = () => ({\n  type: types.ADDITEM\n});\n\nconst getitems = websites => ({\n  type: types.GETITEMS,\n  payload: websites\n});\n\nconst deleteitem = id => ({\n  type: types.DELETEITEM\n});\n\nconst edititem = website => ({\n  type: types.EDITITEM,\n  payload: website\n});\n\nconst updateitem = () => ({\n  type: types.UPDATEITEM\n});\n\nconst searchitem = search => ({\n  type: types.SEARCHITEMS,\n  payload: search\n});\n\nconst copyitem = () => ({\n  type: types.COPYITEM\n});\n\nconst deleteall = () => ({\n  type: types.DELETEITEM\n}); // get data from firebase\n\n\nexport const getitemsInitiate = websites => {\n  return function (dispatch) {\n    db.collection('websites').onSnapshot(querySnapshot => {\n      const websites = [];\n      querySnapshot.forEach(doc => {\n        websites.push({ ...doc.data(),\n          id: doc.id\n        });\n        dispatch(getitems(websites));\n      });\n    });\n  };\n}; // add data to firebase\n\nexport const additemInitiate = input => {\n  return function (dispatch) {\n    db.collection('websites').doc().set(input);\n    dispatch(additem());\n  };\n}; // delete data from firebase\n\nexport const deleteitemInitiate = id => {\n  return function (dispatch) {\n    db.collection('websites').doc(id).delete();\n    dispatch(deleteitem());\n  };\n}; // edit data on firebase\n\nexport const edititemInitiate = id => {\n  return function (dispatch) {\n    db.collection('websites').doc(id).get().then(website => {\n      dispatch(edititem({ ...website.data()\n      }));\n    });\n  };\n}; // update data on firebase\n\nexport const updateitemInitiate = (id, website) => {\n  return function (dispatch) {\n    db.collection('websites').doc(id).update(website);\n    dispatch(updateitem);\n  };\n}; // search item\n\nexport const searchitemInitiate = search => {\n  return function (dispatch) {\n    dispatch(searchitem(search));\n  };\n}; // copy data on firebase\n\nexport const copyitemInitiate = copieditemdata => {\n  return function (dispatch) {\n    db.collection('websites').doc().set(copieditemdata);\n    dispatch(copyitem());\n  };\n};\nexport const deleteitemAllInitiate = id => {\n  return function (dispatch) {\n    id.forEach(i => db.collection('websites').doc(i).delete());\n    dispatch(deleteall());\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/React/website-monitoring/src/Actions/action.js"],"names":["types","db","additem","type","ADDITEM","getitems","websites","GETITEMS","payload","deleteitem","id","DELETEITEM","edititem","website","EDITITEM","updateitem","UPDATEITEM","searchitem","search","SEARCHITEMS","copyitem","COPYITEM","deleteall","getitemsInitiate","dispatch","collection","onSnapshot","querySnapshot","forEach","doc","push","data","additemInitiate","input","set","deleteitemInitiate","delete","edititemInitiate","get","then","updateitemInitiate","update","searchitemInitiate","copyitemInitiate","copieditemdata","deleteitemAllInitiate","i"],"mappings":"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","sourcesContent":["import * as types from './actionTypes'\nimport db from '../firebaseConfig/fbConfig';\n\nconst additem = () =>({\n    type:types.ADDITEM\n})\nconst getitems = (websites) =>({\n    type:types.GETITEMS,\n    payload:websites\n})\nconst deleteitem = (id) =>({\n    type:types.DELETEITEM\n})\nconst edititem = (website) =>({\n    type:types.EDITITEM,\n    payload:website\n})\nconst updateitem = () =>({\n    type:types.UPDATEITEM\n})\nconst searchitem = (search) =>({\n    type:types.SEARCHITEMS,\n    payload:search\n})\nconst copyitem = () =>({\n    type:types.COPYITEM\n})\nconst deleteall = () =>({\n    type:types.DELETEITEM\n})\n// get data from firebase\nexport const getitemsInitiate = (websites) =>{\n    return function(dispatch){\n        db.collection('websites').onSnapshot((querySnapshot)=>{\n            const websites = []\n            querySnapshot.forEach((doc)=>{\n                websites.push({\n                    ...doc.data(),id:doc.id\n                })\n                dispatch(getitems(websites))\n            })\n        })\n    }\n}\n// add data to firebase\nexport const additemInitiate = (input) => {\n    return function(dispatch){\n        db.collection('websites').doc().set(input)\n        dispatch(additem())\n    }\n}\n// delete data from firebase\nexport const deleteitemInitiate = (id) =>{\n    return function(dispatch){\n        db.collection('websites').doc(id).delete()\n        dispatch(deleteitem())\n    }\n    \n}\n// edit data on firebase\nexport const edititemInitiate = (id) =>{\n    return function(dispatch){\n        db.collection('websites').doc(id).get().then((website)=>{\n            dispatch(edititem({...website.data()}))\n        })\n        \n    }\n}\n// update data on firebase\n\nexport const updateitemInitiate = (id,website) =>{\n    return function(dispatch){\n        db.collection('websites').doc(id).update(website)\n        dispatch(updateitem)\n    }\n\n}\n\n// search item\n\nexport const searchitemInitiate = (search) =>{\n    return function(dispatch) {\n        dispatch(searchitem(search))\n    }\n}\n\n// copy data on firebase\nexport const copyitemInitiate = (copieditemdata) =>{\n    return function(dispatch) {\n        db.collection('websites').doc().set(copieditemdata)\n        dispatch(copyitem())\n    }\n}\n\nexport const deleteitemAllInitiate = (id) =>{\n    return function(dispatch){\n        id.forEach(i=>db.collection('websites').doc(i).delete())\n        dispatch(deleteall())\n    }\n}"]},"metadata":{},"sourceType":"module"}